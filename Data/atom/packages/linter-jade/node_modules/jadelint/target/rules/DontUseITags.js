var DontUseITags, Rule,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Rule = require('./../Rule');

DontUseITags = (function(superClass) {
  extend(DontUseITags, superClass);

  function DontUseITags() {
    return DontUseITags.__super__.constructor.apply(this, arguments);
  }

  DontUseITags.prototype.name = 'Dont Use i Tags';

  DontUseITags.prototype.level = 'ignore';

  DontUseITags.prototype.description = "Don't use i tags\n\n```jade\n//- Invalid\ni Some text\n```";

  DontUseITags.prototype.check = function() {
    if (this.node.type === 'Tag' && this.node.name === 'i') {
      return this.fail();
    }
  };

  return DontUseITags;

})(Rule);

module.exports = DontUseITags;
