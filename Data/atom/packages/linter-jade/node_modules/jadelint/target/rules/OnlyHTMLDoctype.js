var OnlyHTMLDoctype, Rule,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Rule = require('./../Rule');

OnlyHTMLDoctype = (function(superClass) {
  extend(OnlyHTMLDoctype, superClass);

  function OnlyHTMLDoctype() {
    return OnlyHTMLDoctype.__super__.constructor.apply(this, arguments);
  }

  OnlyHTMLDoctype.prototype.name = 'Only HTML doctypes are allowed';

  OnlyHTMLDoctype.prototype.level = 'error';

  OnlyHTMLDoctype.prototype.description = "`doctype` can only be set to `doctype html`";

  OnlyHTMLDoctype.prototype.check = function() {
    if (this.node.type === 'Doctype' && this.node.val.toLowerCase() !== 'html') {
      return this.fail();
    }
  };

  return OnlyHTMLDoctype;

})(Rule);

module.exports = OnlyHTMLDoctype;
