var LintError, Rule, lex, parse;

lex = require('jade-lexer');

parse = require('jade-parser');

LintError = require('./LintError');

Rule = (function() {
  Rule.prototype.name = 'Generic Rule';

  Rule.prototype.filename = 'Generic Filename';

  Rule.prototype.lineNumber = 'Generic LineNo';

  Rule.prototype.level = 'ignore';

  function Rule(filename, node) {
    this.filename = filename;
    this.node = node;
  }

  Rule.prototype.check = function() {
    return false;
  };

  Rule.prototype.fail = function() {
    var err, ref;
    err = new LintError();
    err.level = this.level;
    err.name = this.name;
    err.filename = this.filename;
    err.line = (ref = this.node) != null ? ref.line : void 0;
    throw err;
  };

  Rule.prototype.clean = function(str) {
    return str.replace(/^'/g, '').replace(/'$/g, '').replace(/^"/g, '').replace(/"$/g, '');
  };

  Rule.prototype.validate = function(nodeContent) {
    var e;
    this.node = (parse(lex(nodeContent))).nodes[0];
    try {
      this.check();
    } catch (_error) {
      e = _error;
      return false;
    }
    return true;
  };

  return Rule;

})();

module.exports = Rule;
