var Linter, lex, parse, rules;

lex = require('jade-lexer');

parse = require('jade-parser');

rules = require('./rules');

Linter = (function() {
  function Linter(filename, source) {
    var e;
    this.filename = filename;
    this.source = source;
    try {
      this.ast = parse(lex(this.source, this.filename));
    } catch (_error) {
      e = _error;
      this.compileError = {
        name: e.msg,
        level: 'error',
        filename: this.filename,
        line: e.line,
        code: e.code
      };
    }
  }

  Linter.prototype.lint = function(root) {
    var errors, i, len, node, ref;
    if (root == null) {
      root = this.ast;
    }
    if (this.compileError != null) {
      return [this.compileError];
    }
    errors = [];
    ref = root.nodes;
    for (i = 0, len = ref.length; i < len; i++) {
      node = ref[i];
      errors = errors.concat(rules.checkAll(this.filename, node));
      if (node.block != null) {
        errors = errors.concat(this.lint(node.block));
      }
    }
    return errors;
  };

  return Linter;

})();

module.exports = Linter;
